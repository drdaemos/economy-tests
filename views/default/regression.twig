{% extends "master.twig" %}

{% block page %}
<div id="countries-view">
	

</div>

<!-- scripts -->
<script type="text/javascript">
$(document).ready(function(){
	$.when($.getJSON("/api/getRegressionTest")).then(processTest);
	
});
function processTest(testData){
	for(var country in testData){
		buildWidget(testData[country]);
	}	
}
function buildWidget(country){
	var output = "<h3>" + country.name + "</h3>";
	output 	  += "<div id='chartarea-"+country.id+"' style='height:400px; width:100%;'></div>";
	output    += "<p>y = ";
	for(var coeff in country.regression.coefficients){	
		output += parseFloat(country.regression.coefficients[coeff]).toFixed(3)+"*x<sub>"+coeff+"</sub> + ";
	}
    output    += "<br>R<sup>2</sup> = "+parseFloat(country.regression.rsquare).toFixed(3);
    output    += "<br>SSE = "+parseFloat(country.regression.SSE).toFixed(3);
    output    += "<br>SSR = "+parseFloat(country.regression.SSR).toFixed(3);
	output    += "<hr>";
	var values = [93.4636,95.087,4.6,-2.4942];
	var coeffs = country.regression.coefficients;
	$("#countries-view").append(output);
	buildChart("#chartarea-"+country.id, country.data, country.regression1d.coefficients);
}
function calcY(values, coeffs){
	var result = coeffs[0];
	for (var i = 0; i < values.length; i++) {
		result += parseFloat(coeffs[i+1])*parseFloat(values[i]);
	};
	return result;
}
function buildChart(view, testData, regr){
	var sets = [];
	var data = [];
	for(var item in testData){
		var value = item;
		data[data.length] = {x:parseFloat(testData[value].date), y:parseFloat(testData[value].gni)};
	}
	sets[sets.length] = {
        name: "GNI",
        color: 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')',
        data: data
    }
    var start = {x:2002, y:calcY([2002], regr)};    
    var end = {x:2014, y:calcY([2014], regr)};

    data = [start,end];
    sets[sets.length] = {
        name: "GNI trend",
        color: 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')',
        data: data
    }
    $(view).highcharts({
        chart: {
            type: 'scatter',
            zoomType: 'xy'
        },
        title: {
            text: 'GNI'
        },
        subtitle: {
            text: 'Source: World Bank'
        },
        xAxis: {
            title: {
                enabled: true,
                text: 'Years'
            },
            startOnTick: true,
            endOnTick: true,
            showLastLabel: true
        },
        yAxis: {
            title: {
                text: 'GNI per capita, PPP ($)'
            }
        },
        legend: {
            layout: 'vertical',
            align: 'left',
            verticalAlign: 'top',
            x: 100,
            y: 70,
            floating: true,
            backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF',
            borderWidth: 1
        },
        plotOptions: {
            scatter: {
            	lineWidth: 3,
                marker: {
                    radius: 5,
                    states: {
                        hover: {
                            enabled: true,
                            lineColor: 'rgb(100,100,100)'
                        }
                    }
                },
                states: {
                    hover: {
                        marker: {
                            enabled: false
                        }
                    }
                },
                tooltip: {
                    headerFormat: '<b>{series.name}</b><br>',
                    pointFormat: '{point.x}, {point.y} $'
                }
            }
        },
        series: sets
    });
}
</script>
{% endblock %}

